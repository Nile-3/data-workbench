<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>DialogSpectrumSetting</class>
 <widget class="QDialog" name="DialogSpectrumSetting">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>681</width>
    <height>541</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Spectrum Setting</string>
  </property>
  <widget class="QGroupBox" name="groupBox">
   <property name="geometry">
    <rect>
     <x>200</x>
     <y>10</y>
     <width>471</width>
     <height>461</height>
    </rect>
   </property>
   <property name="title">
    <string>Spectrum Setting</string>
   </property>
   <widget class="QLabel" name="label_3">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>30</y>
      <width>111</width>
      <height>16</height>
     </rect>
    </property>
    <property name="text">
     <string>sampling rate</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_4">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>60</y>
      <width>54</width>
      <height>12</height>
     </rect>
    </property>
    <property name="text">
     <string>fft size</string>
    </property>
   </widget>
   <widget class="QRadioButton" name="radioButton">
    <property name="geometry">
     <rect>
      <x>80</x>
      <y>60</y>
      <width>331</width>
      <height>16</height>
     </rect>
    </property>
    <property name="text">
     <string>The length of FFT is equal to the length of data</string>
    </property>
   </widget>
   <widget class="QRadioButton" name="radioButton_2">
    <property name="geometry">
     <rect>
      <x>80</x>
      <y>80</y>
      <width>331</width>
      <height>16</height>
     </rect>
    </property>
    <property name="text">
     <string>The length of FFT is a power of 2</string>
    </property>
   </widget>
   <widget class="QRadioButton" name="radioButton_3">
    <property name="geometry">
     <rect>
      <x>80</x>
      <y>100</y>
      <width>191</width>
      <height>16</height>
     </rect>
    </property>
    <property name="text">
     <string>customize</string>
    </property>
   </widget>
   <widget class="QDoubleSpinBox" name="doubleSpinBox">
    <property name="enabled">
     <bool>false</bool>
    </property>
    <property name="geometry">
     <rect>
      <x>80</x>
      <y>120</y>
      <width>191</width>
      <height>22</height>
     </rect>
    </property>
    <property name="decimals">
     <number>0</number>
    </property>
    <property name="maximum">
     <double>1000000000000000057857959942726969827393378689175040438172647424.000000000000000</double>
    </property>
    <property name="singleStep">
     <double>64.000000000000000</double>
    </property>
   </widget>
   <widget class="QDoubleSpinBox" name="doubleSpinBox_2">
    <property name="geometry">
     <rect>
      <x>110</x>
      <y>30</y>
      <width>191</width>
      <height>22</height>
     </rect>
    </property>
    <property name="decimals">
     <number>0</number>
    </property>
    <property name="maximum">
     <double>100000000000000003502199685943161173046080317798311825604870144.000000000000000</double>
    </property>
    <property name="singleStep">
     <double>32.000000000000000</double>
    </property>
   </widget>
   <widget class="QToolButton" name="toolButtonAboutFFTSize">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>80</y>
      <width>24</width>
      <height>21</height>
     </rect>
    </property>
    <property name="toolTip">
     <string>1.Cropping or Zero-Padding Input:
When the FFT length is shorter than the input waveform length, cropping the input can reduce the amount of data the FFT needs to process, thereby improving computational speed. However, doing so may lose some information in the waveform.
When the FFT length is longer than the input waveform length, zero-padding is used to increase the number of data points. This usually doesn't increase spectral resolution (because no actual signal information is added), but it can make the spectrum appear smoother and may help identify peaks more clearly during graphical presentation.

2.Controlling Frequency Resolution:
FFT converts signals from the time domain to the frequency domain, resulting in a series of complex numbers representing different frequency components. The modulus of these complex numbers indicates the amplitude of that frequency component, while the argument represents the phase.
The FFT length (i.e., the number of points n) determines the number of frequency components. A longer FFT will produce more frequency components, providing finer frequency resolution. However, it's important to note that increasing the FFT length doesn't necessarily increase the accuracy or information content of the spectrum; it just distributes the existing spectral information across more points.

3.Performance Optimization:
Many FFT libraries (such as FFTW, KissFFT, etc.) are optimized for FFTs of specific lengths, especially when the length is a power of 2. In these cases, the FFT algorithm can utilize divide-and-conquer strategies (such as the Cooley-Tukey FFT algorithm) to compute the transformation more efficiently.

4.Avoiding Spectral Leakage:
If the signal contains periodic components (such as sine waves), and the FFT length happens to be an integer multiple of that period, the FFT result will produce a sharp peak at that frequency, while values at other frequencies will be close to zero. This helps to identify and measure periodic components in the signal more accurately.
If the FFT length is not an integer multiple of the signal period, it can lead to spectral leakage, where the signal's energy leaks into other frequencies, making spectral analysis difficult. Choosing an appropriate FFT length (especially one that matches the signal period) can reduce this leakage.

5.Saving Computational Resources:
In some application scenarios, very high frequency resolution may not be required. In these cases, using a shorter FFT can save computation time and resources while still providing sufficient information to meet the needs.</string>
    </property>
    <property name="text">
     <string>...</string>
    </property>
   </widget>
  </widget>
  <widget class="QDialogButtonBox" name="buttonBox">
   <property name="geometry">
    <rect>
     <x>510</x>
     <y>500</y>
     <width>156</width>
     <height>23</height>
    </rect>
   </property>
   <property name="standardButtons">
    <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>
   </property>
  </widget>
  <widget class="QWidget" name="layoutWidget">
   <property name="geometry">
    <rect>
     <x>10</x>
     <y>10</y>
     <width>171</width>
     <height>451</height>
    </rect>
   </property>
   <layout class="QVBoxLayout" name="verticalLayout">
    <item>
     <widget class="QLabel" name="label">
      <property name="text">
       <string>select series</string>
      </property>
     </widget>
    </item>
    <item>
     <widget class="QComboBox" name="comboBox"/>
    </item>
    <item>
     <widget class="QLabel" name="label_2">
      <property name="text">
       <string>data preview</string>
      </property>
     </widget>
    </item>
    <item>
     <widget class="QTableView" name="tableView"/>
    </item>
   </layout>
  </widget>
 </widget>
 <resources/>
 <connections>
  <connection>
   <sender>radioButton_3</sender>
   <signal>toggled(bool)</signal>
   <receiver>doubleSpinBox</receiver>
   <slot>setEnabled(bool)</slot>
   <hints>
    <hint type="sourcelabel">
     <x>339</x>
     <y>118</y>
    </hint>
    <hint type="destinationlabel">
     <x>367</x>
     <y>137</y>
    </hint>
   </hints>
  </connection>
 </connections>
</ui>
